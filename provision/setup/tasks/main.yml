# Sources 
# [1] http://labs.qandidate.com/blog/2013/11/21/installing-a-lamp-server-with-ansible-playbooks-and-roles/
# [2] https://github.com/gaspaio/ansible-repository/blob/master/php/tasks/phpdev.yml
# [3] http://stackoverflow.com/a/25047243/5738
# [4] http://stackoverflow.com/a/24165405/5738
- name: Install apt packages # [1]
  apt: 
    pkg={{ item }}
    state=latest 
    update_cache=yes
  with_items:
    - apache2
    - libapache2-mod-php5
    - php5-mcrypt
    - php5-mysql
    - mysql-server
    - python-mysqldb
    - git

- name: Stop Apache2 # [1]
  service:
    name=apache2
    state=stopped
    enabled=no

- name: Set Vagrant user as the user running Apache
  lineinfile:
    dest=/etc/apache2/envvars
    regexp="^export APACHE_RUN_USER=.*$"
    line="export APACHE_RUN_USER=vagrant"
    backrefs=yes

- name: Set Vagrant group as the group running Apache
  lineinfile:
    dest=/etc/apache2/envvars
    regexp="^export APACHE_RUN_GROUP=.*$"
    line="export APACHE_RUN_GROUP=vagrant"
    backrefs=yes

- name: Update the default http site in apache
  lineinfile:
    dest=/etc/apache2/sites-available/000-default.conf
    regexp="DocumentRoot \/var\/www\/html"
    backrefs=true
    line="DocumentRoot /var/www/laravel/public"

- name: Enable Pretty Urls
  lineinfile:
    dest=/etc/apache2/sites-available/000-default.conf
    insertbefore="</VirtualHost>"
    line="<Directory /var/www/laravel/public>\nOptions +FollowSymLinks\nRewriteEngine On\nRewriteCond %{REQUEST_FILENAME} !-d\nRewriteCond %{REQUEST_FILENAME} !-f\nRewriteRule ^ index.php [L]\n</Directory>"

- name: Enable apache mods
  file:
    src='/etc/apache2/mods-available/{{ item }}'
    dest='/etc/apache2/mods-enabled/{{ item }}'
    state=link
  with_items:
    - rewrite.load
    - php5.load
    - php5.conf

- name: Make www-data a member of the vagrant group
  user:
    name=www-data
    groups=vagrant
    append=yes

- name: Enable PHP extensions
  file:
    src='/etc/php5/mods-available/{{ item[0] }}'
    dest='/etc/php5/{{ item[1] }}/conf.d/{{ item[0] }}'
    state=link
  with_nested:
    - [ 'mcrypt.ini' ]
    - [ 'apache2', 'cli' ]

- name: Create MySQL Database # [1]
  mysql_db: 
    name={{ database_name }}
    state=present
    collation=utf8_general_ci

- name: Create MySQL User # [1]
  mysql_user:
    name={{ database_username }}
    password={{ database_password }}
    priv={{ database_name }}.*:ALL 
    host=localhost 
    state=present

- name: Download composer # [2]
  shell: 
    test -f /usr/local/bin/composer || curl -sS https://getcomposer.org/installer | /usr/bin/php
    chdir=/home/vagrant
    creates=/home/vagrant/composer.phar
  async: 7200

- name: Move composer to usr/local/bin # [4]
  command:
    mv -f /home/vagrant/composer.phar /usr/local/bin/composer
    creates=/usr/local/bin/composer

- name: Update composer package
  shell:
    composer self-update
  async: 7200

- name: Set composer defaults
  shell:
    composer config --global {{ item.key }} {{ item.value }}
  with_items:
    - { key: 'process-timeout', value: '7200' }
    - { key: 'github-protocols', value: 'https' }
    - { key: 'notify-on-install', value: 'false' }

- name: Build composer.json
  shell:
    composer create-project laravel/laravel laravel --no-interaction
    chdir=/var/www
    creates=/var/www/laravel/composer.json
  async: 7200

- name: Ensure the composer modules have been added
  shell:
    grep "{{ item.name }}" composer.json || composer require --no-update --dev "{{ item.name }}:{{ item.version }}"
    chdir=/var/www/laravel
  with_items:
    - { name: "way/generators", version: "2.*" }
    - { name: "fzaninotto/faker", version: "1.*" }
    - { name: "barryvdh/laravel-ide-helper", version: "1.*" }
    - { name: "doctrine/dbal", version: "~2.3" }
    - { name: "phpunit/phpunit", version: "3.7.*" }

- name: Get the composer modules
  shell:
    composer update
    chdir=/var/www/laravel
  async: 7200

- name: Add Service Providers to the app/config/app.php # [3]
  lineinfile:
    dest=/var/www/laravel/app/config/app.php
    insertafter="^\s*'Illuminate\\\\Workbench\\\\WorkbenchServiceProvider',"
    line="{{'\t'}}{{'\t'}}'{{ item }}',"
  with_items:
    - "Barryvdh\\LaravelIdeHelper\\IdeHelperServiceProvider"
    - "Way\\Generators\\GeneratorsServiceProvider"

- name: Rebuild the laravel-ide-helper file
  shell:
    chdir=/var/www/laravel
    php artisan clear-compiled && php artisan ide-helper:generate && php artisan optimize
  async: 7200

- name: Encourage the laravel-ide-helper to run on composer update
  lineinfile:
    dest=/var/www/laravel/composer.json
    insertafter='^\s*"post-update-cmd". \[\n\s*"php artisan clear-compiled",'
    line="{{'\t'}}{{'\t'}}{{'\t'}}\"php artisan ide-helper:generate\","

- name: Create sensitive configuration file
  copy:
    dest=/var/www/laravel/.env.php
    src=var_www_laravel_.env.php
    force=no

- name: Set database credentials in sensitive file
  lineinfile:
    dest=/var/www/laravel/.env.php
    insertafter="return array\("
    line="{{'\t'}}'{{ item.key }}' => '{{ item.value }}',"
  with_items:
    - { key: 'database_username', value: '{{ database_username }}' }
    - { key: 'database_password', value: '{{ database_password }}' }
    - { key: 'database_name', value: '{{ database_name }}' }

- name: Rebuild the database configuration file
  copy:
    dest=/var/www/laravel/app/config/database.php
    src=var_www_laravel_app_config_database.php
    force=yes

- name: Start Apache2 # [1]
  service:
    name=apache2
    state=started
    enabled=yes
